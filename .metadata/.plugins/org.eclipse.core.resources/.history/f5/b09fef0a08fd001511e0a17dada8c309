/**
 * 
 */
package tests;

import com.neet.DiamondHunter.Entity.*;
import static org.junit.Assert.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 * Class that performs unit tests on the Animation class
 * @author trevorforrey
 * 
 */
public class AnimationTest {
	
	private Animation animation;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		System.out.println("Setting up Animation test");
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		System.out.println("Tearing down Animation test");
	}

	/**
	 * @throws java.lang.Exception
	 */
	@Before
	public void setUp() throws Exception {
		animation = new Animation();
	}

	/**
	 * @throws java.lang.Exception
	 */
	@After
	public void tearDown() throws Exception {
		animation = null;
	}

	/**
	 * Tests hasPlayedOnce method of Animation class
	 * hasPlayedOnce being true
	 */
	@Test
	public void hasPlayedOnceTest() {
		animation.setFrame(4);
		animation.setNumFrames(4);
		animation.update();

		boolean actual = animation.hasPlayedOnce();
		
		assertTrue(actual);
	}
	
	/**
	 * Tests hasPlayedOnce method of Animation class
	 * hasPlayedOnce being false
	 */
	@Test
	public void hasPlayedOnceTest2() {
		
		boolean actual = animation.hasPlayedOnce();
		
		assertFalse(actual);
	}
	
	/**
	 * Tests hasPlayedOnce method of Animation class
	 * hasPlayedTest(2) being true
	 */
	@Test
	public void hasPlayedTest() {
		animation.setFrame(4);
		animation.setNumFrames(4);
		animation.update();
		
		animation.setFrame(5);
		animation.setNumFrames(5);
		animation.update();

		boolean actual = animation.hasPlayed(2);
		
		assertTrue(actual);
	}
	
	/**
	 * Tests hasPlayedOnce method of Animation class
	 * hasPlayedTest(0) being true
	 */
	@Test
	public void hasPlayedTest2() {

		boolean actual = animation.hasPlayed(0);
		
		assertTrue(actual);
	}
	
	/**
	 * Tests hasPlayedOnce method of Animation class
	 * hasPlayedTest(2) being false
	 */
	@Test
	public void hasPlayedTest2() {

		boolean actual = animation.hasPlayed(2);
		
		assertFalse(actual);
	}
	

}
